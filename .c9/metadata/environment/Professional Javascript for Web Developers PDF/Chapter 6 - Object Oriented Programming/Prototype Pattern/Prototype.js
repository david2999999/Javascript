{"filter":false,"title":"Prototype.js","tooltip":"/Professional Javascript for Web Developers PDF/Chapter 6 - Object Oriented Programming/Prototype Pattern/Prototype.js","undoManager":{"mark":25,"position":25,"stack":[[{"start":{"row":0,"column":0},"end":{"row":10,"column":27},"action":"insert","lines":["function Person(){","}","Person.prototype.name = “Nicholas”;","Person.prototype.age = 29;","Person.prototype.job = “Software Engineer”;","Person.prototype.sayName = function(){","alert(this.name);","};","var person1 = new Person();","person1.sayName(); //”Nicholas”","var person2 = new Person();"],"id":1}],[{"start":{"row":10,"column":27},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":11,"column":0},"end":{"row":12,"column":49},"action":"insert","lines":["person2.sayName(); //”Nicholas”","alert(person1.sayName == person2.sayName); //true"],"id":3}],[{"start":{"row":7,"column":2},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":4}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":4},"action":"insert","lines":["    "],"id":5}],[{"start":{"row":1,"column":1},"end":{"row":2,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":0,"column":18},"end":{"row":1,"column":0},"action":"remove","lines":["",""],"id":7}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":8}],[{"start":{"row":0,"column":0},"end":{"row":5,"column":13},"action":"insert","lines":["Each function is created with a prototype property, which is an object containing properties and","methods that should be available to instances of a particular reference type. This object is literally","a prototype for the object to be created once the constructor is called. The benefi t of using the","prototype is that all of its properties and methods are shared among object instances. Instead of","assigning object information in the constructor, they can be assigned directly to the prototype, as in","this example:"],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":3},"action":"insert","lines":["// "],"id":10},{"start":{"row":1,"column":0},"end":{"row":1,"column":3},"action":"insert","lines":["// "]},{"start":{"row":2,"column":0},"end":{"row":2,"column":3},"action":"insert","lines":["// "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":3},"action":"insert","lines":["// "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":3},"action":"insert","lines":["// "]},{"start":{"row":5,"column":0},"end":{"row":5,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":19,"column":49},"end":{"row":20,"column":0},"action":"insert","lines":["",""],"id":11},{"start":{"row":20,"column":0},"end":{"row":21,"column":0},"action":"insert","lines":["",""]},{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":22,"column":0},"end":{"row":38,"column":50},"action":"insert","lines":["Although it’s possible to read values on the prototype from object instances, it is not possible to","overwrite them. If you add a property to an instance that has the same name as a property on the","prototype, you create the property on the instance, which then masks the property on the prototype.","Here’s an example:","function Person(){","}","Person.prototype.name = “Nicholas”;","Person.prototype.age = 29;","Person.prototype.job = “Software Engineer”;","Person.prototype.sayName = function(){","alert(this.name);","};","var person1 = new Person();","var person2 = new Person();","person1.name = “Greg”;","alert(person1.name); //”Greg” - from instance","alert(person2.name); //”Nicholas” - from prototype"],"id":12}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":3},"action":"insert","lines":["// "],"id":13},{"start":{"row":23,"column":0},"end":{"row":23,"column":3},"action":"insert","lines":["// "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":3},"action":"insert","lines":["// "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":4},"action":"insert","lines":["    "],"id":14}],[{"start":{"row":33,"column":2},"end":{"row":34,"column":0},"action":"insert","lines":["",""],"id":15}],[{"start":{"row":26,"column":18},"end":{"row":27,"column":0},"action":"remove","lines":["",""],"id":16}],[{"start":{"row":26,"column":19},"end":{"row":27,"column":0},"action":"insert","lines":["",""],"id":17}],[{"start":{"row":39,"column":50},"end":{"row":40,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":40,"column":0},"end":{"row":41,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":41,"column":0},"end":{"row":53,"column":22},"action":"insert","lines":["The delete operator, however, completely removes the instance property and","allows the prototype property to be accessed again as follows:","function Person(){","}","Person.prototype.name = “Nicholas”;","Person.prototype.age = 29;","Person.prototype.job = “Software Engineer”;","Person.prototype.sayName = function(){","alert(this.name);","};","var person1 = new Person();","var person2 = new Person();","person1.name = “Greg”;"],"id":19}],[{"start":{"row":53,"column":22},"end":{"row":54,"column":0},"action":"insert","lines":["",""],"id":20},{"start":{"row":54,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":55,"column":0},"end":{"row":58,"column":54},"action":"insert","lines":["alert(person1.name); //”Greg” - from instance","alert(person2.name); //”Nicholas” - from prototype","delete person1.name;","alert(person1.name); //”Nicholas” - from the prototype"],"id":21}],[{"start":{"row":49,"column":0},"end":{"row":49,"column":4},"action":"insert","lines":["    "],"id":22}],[{"start":{"row":41,"column":0},"end":{"row":41,"column":3},"action":"insert","lines":["// "],"id":23},{"start":{"row":42,"column":0},"end":{"row":42,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":43,"column":18},"end":{"row":44,"column":0},"action":"remove","lines":["",""],"id":24}],[{"start":{"row":40,"column":0},"end":{"row":57,"column":54},"action":"remove","lines":["","// The delete operator, however, completely removes the instance property and","// allows the prototype property to be accessed again as follows:","function Person(){}","Person.prototype.name = “Nicholas”;","Person.prototype.age = 29;","Person.prototype.job = “Software Engineer”;","Person.prototype.sayName = function(){","    alert(this.name);","};","var person1 = new Person();","var person2 = new Person();","person1.name = “Greg”;","","alert(person1.name); //”Greg” - from instance","alert(person2.name); //”Nicholas” - from prototype","delete person1.name;","alert(person1.name); //”Nicholas” - from the prototype"],"id":25}],[{"start":{"row":39,"column":50},"end":{"row":40,"column":0},"action":"remove","lines":["",""],"id":26}]]},"ace":{"folds":[],"scrolltop":446.5,"scrollleft":0,"selection":{"start":{"row":39,"column":50},"end":{"row":39,"column":50},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1560859903105,"hash":"44295266907592b7be685a913035f881bdff9b66"}