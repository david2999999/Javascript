{"filter":false,"title":"ProblemsWithConstructor.js","tooltip":"/Professional Javascript for Web Developers PDF/Chapter 6 - Object Oriented Programming/Constructor Pattern/ProblemsWithConstructor.js","undoManager":{"mark":11,"position":11,"stack":[[{"start":{"row":0,"column":0},"end":{"row":10,"column":1},"action":"insert","lines":["Though the constructor paradigm is useful, it is not without its faults. The major downside to","constructors is that methods are created once for each instance. So, in the previous example, both","person1 and person2 have a method called sayName(), but those methods are not the same","instance of Function. Remember, functions are objects in ECMAScript, so every time a function is","defi ned, it’s actually an object being instantiated. Logically, the constructor actually looks like this:","function Person(name, age, job){","this.name = name;","this.age = age;","this.job = job;","this.sayName = new Function(“alert(this.name)”); //logical equivalent","}"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":3},"action":"insert","lines":["// "],"id":2},{"start":{"row":1,"column":0},"end":{"row":1,"column":3},"action":"insert","lines":["// "]},{"start":{"row":2,"column":0},"end":{"row":2,"column":3},"action":"insert","lines":["// "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":3},"action":"insert","lines":["// "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":6,"column":0},"end":{"row":6,"column":4},"action":"insert","lines":["    "],"id":3},{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "]},{"start":{"row":8,"column":0},"end":{"row":8,"column":4},"action":"insert","lines":["    "]},{"start":{"row":9,"column":0},"end":{"row":9,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":10,"column":1},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":11,"column":0},"end":{"row":12,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":12,"column":0},"end":{"row":24,"column":47},"action":"insert","lines":["It’s possible to work around this limitation by moving the function defi nition outside of the constructor,","as follows:","function Person(name, age, job){","this.name = name;","this.age = age;","this.job = job;","this.sayName = sayName;","}","function sayName(){","alert(this.name);","}","var person1 = new Person(“Nicholas”, 29, “Software Engineer”);","var person2 = new Person(“Greg”, 27, “Doctor”);"],"id":5}],[{"start":{"row":21,"column":0},"end":{"row":21,"column":4},"action":"insert","lines":["    "],"id":6}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "],"id":7},{"start":{"row":16,"column":0},"end":{"row":16,"column":4},"action":"insert","lines":["    "]},{"start":{"row":17,"column":0},"end":{"row":17,"column":4},"action":"insert","lines":["    "]},{"start":{"row":18,"column":0},"end":{"row":18,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":13,"column":11},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":8}],[{"start":{"row":20,"column":1},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":9}],[{"start":{"row":24,"column":1},"end":{"row":25,"column":0},"action":"insert","lines":["",""],"id":11}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":3},"action":"insert","lines":["// "],"id":12},{"start":{"row":13,"column":0},"end":{"row":13,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":13,"column":14},"end":{"row":14,"column":0},"action":"remove","lines":["",""],"id":13}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":26,"column":47},"end":{"row":26,"column":47},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1560858873219,"hash":"14bf77c86e449a2204f59b504fd817da4675bfc0"}