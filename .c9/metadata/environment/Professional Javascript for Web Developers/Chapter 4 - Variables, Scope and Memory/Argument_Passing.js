{"filter":false,"title":"Argument_Passing.js","tooltip":"/Professional Javascript for Web Developers/Chapter 4 - Variables, Scope and Memory/Argument_Passing.js","ace":{"folds":[],"scrolltop":120,"scrollleft":0,"selection":{"start":{"row":9,"column":85},"end":{"row":9,"column":85},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"hash":"48be2ed50a2cfc4c87a38cf6d3651af767e92a69","undoManager":{"mark":9,"position":9,"stack":[[{"start":{"row":0,"column":0},"end":{"row":7,"column":19},"action":"insert","lines":["function addTen(num) {","num += 10;","return num;","}","var count = 20;","var result = addTen(count);","alert(count); //20 - no change","alert(result); //30"],"id":1}],[{"start":{"row":7,"column":19},"end":{"row":8,"column":0},"action":"insert","lines":["",""],"id":2},{"start":{"row":8,"column":0},"end":{"row":9,"column":0},"action":"insert","lines":["",""]},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":10,"column":0},"end":{"row":15,"column":32},"action":"insert","lines":["function setName(obj) {","obj.name = “Nicholas”;","}","var person = new Object();","setName(person);","alert(person.name); //”Nicholas”"],"id":3}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":4},"action":"insert","lines":["    "],"id":4}],[{"start":{"row":1,"column":0},"end":{"row":1,"column":4},"action":"insert","lines":["    "],"id":5},{"start":{"row":2,"column":0},"end":{"row":2,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":0,"column":0},"end":{"row":9,"column":86},"action":"insert","lines":["All function arguments in ECMAScript are passed by value. This means that the value outside of","the function is copied into an argument on the inside of the function the same way a value is copied","from one variable to another. If the value is primitive, then it acts just like a primitive variable","copy, and if the value is a reference, it acts just like a reference variable copy. This is often a point","of confusion for developers, because variables are accessed both by value and by reference, but","arguments are passed only by value.","When an argument is passed by value, the value is copied into a local variable (a named argument","and, in ECMAScript, a slot in the arguments object). When an argument is passed by reference, the","location of the value in memory is stored into a local variable, which means that changes to the local","variable are refl ected outside of the function. (This is not possible in ECMAScript.)"],"id":7}],[{"start":{"row":9,"column":86},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":8}],[{"start":{"row":9,"column":17},"end":{"row":9,"column":18},"action":"remove","lines":[" "],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":3},"action":"insert","lines":["// "],"id":10},{"start":{"row":1,"column":0},"end":{"row":1,"column":3},"action":"insert","lines":["// "]},{"start":{"row":2,"column":0},"end":{"row":2,"column":3},"action":"insert","lines":["// "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":3},"action":"insert","lines":["// "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":3},"action":"insert","lines":["// "]},{"start":{"row":5,"column":0},"end":{"row":5,"column":3},"action":"insert","lines":["// "]},{"start":{"row":6,"column":0},"end":{"row":6,"column":3},"action":"insert","lines":["// "]},{"start":{"row":7,"column":0},"end":{"row":7,"column":3},"action":"insert","lines":["// "]},{"start":{"row":8,"column":0},"end":{"row":8,"column":3},"action":"insert","lines":["// "]},{"start":{"row":9,"column":0},"end":{"row":9,"column":3},"action":"insert","lines":["// "]}]]},"timestamp":1558613729653}