{"filter":false,"title":"Function_Declaraction_vs_Function_Expression.js","tooltip":"/Professional Javascript for Web Developers/Chapter 5 - Reference Types/Function/Function_Declaraction_vs_Function_Expression.js","undoManager":{"mark":12,"position":12,"stack":[[{"start":{"row":0,"column":0},"end":{"row":8,"column":1},"action":"insert","lines":["Throughout this section, the function declaration and function expression are referred to as being","almost equivalent. This hedging is due to one major difference in the way that a JavaScript engine","loads data into the execution context. Function declarations are read and available in an execution","context before any code is executed, whereas function expressions aren’t complete until the","execution reaches that line of code. Consider the following:","alert(sum(10,10));","function sum(num1, num2){","return num1 + num2;","}"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":3},"action":"insert","lines":["// "],"id":2},{"start":{"row":1,"column":0},"end":{"row":1,"column":3},"action":"insert","lines":["// "]},{"start":{"row":2,"column":0},"end":{"row":2,"column":3},"action":"insert","lines":["// "]},{"start":{"row":3,"column":0},"end":{"row":3,"column":3},"action":"insert","lines":["// "]},{"start":{"row":4,"column":0},"end":{"row":4,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"insert","lines":["    "],"id":3}],[{"start":{"row":8,"column":1},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":4},{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":10,"column":0},"end":{"row":13,"column":101},"action":"insert","lines":["This code runs perfectly, because function declarations are read and added to the execution context","before the code begins running through a process called function declaration hoisting. As the code","is being evaluated, the JavaScript engine does a fi rst pass for function declarations and pulls them","to the top of the source tree. So even though the function declaration appears after its usage in the"],"id":5}],[{"start":{"row":13,"column":101},"end":{"row":14,"column":0},"action":"insert","lines":["",""],"id":6}],[{"start":{"row":14,"column":0},"end":{"row":20,"column":2},"action":"insert","lines":["actual source code, the engine changes this to hoist the function declarations to the top. Changing","the function declaration to an equivalent function expression, as in the following example, will","cause an error during execution:","alert(sum(10,10));","var sum = function(num1, num2){","return num1 + num2;","};"],"id":7}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":3},"action":"insert","lines":["// "],"id":8},{"start":{"row":11,"column":0},"end":{"row":11,"column":3},"action":"insert","lines":["// "]},{"start":{"row":12,"column":0},"end":{"row":12,"column":3},"action":"insert","lines":["// "]},{"start":{"row":13,"column":0},"end":{"row":13,"column":3},"action":"insert","lines":["// "]},{"start":{"row":14,"column":0},"end":{"row":14,"column":3},"action":"insert","lines":["// "]},{"start":{"row":15,"column":0},"end":{"row":15,"column":3},"action":"insert","lines":["// "]},{"start":{"row":16,"column":0},"end":{"row":16,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":19,"column":0},"end":{"row":19,"column":4},"action":"insert","lines":["    "],"id":9}],[{"start":{"row":20,"column":2},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":10},{"start":{"row":21,"column":0},"end":{"row":22,"column":0},"action":"insert","lines":["",""]}],[{"start":{"row":22,"column":0},"end":{"row":25,"column":31},"action":"insert","lines":["This updated code will cause an error, because the function is part of an initialization statement,","not part of a function declaration. That means the function isn’t available in the variable sum","until the highlighted line has been executed, which won’t happen, because the fi rst line causes an","“unexpected identifi er” error."],"id":11}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":3},"action":"insert","lines":["// "],"id":12},{"start":{"row":23,"column":0},"end":{"row":23,"column":3},"action":"insert","lines":["// "]},{"start":{"row":24,"column":0},"end":{"row":24,"column":3},"action":"insert","lines":["// "]},{"start":{"row":25,"column":0},"end":{"row":25,"column":3},"action":"insert","lines":["// "]}],[{"start":{"row":25,"column":23},"end":{"row":25,"column":24},"action":"remove","lines":[" "],"id":13}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":25,"column":33},"end":{"row":25,"column":33},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1559132881117,"hash":"bc1a81d267d44b0e549c3f87b1a0f82018899c3d"}